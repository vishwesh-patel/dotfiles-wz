import * as vscode from 'vscode';
import { TypeScriptServiceConfiguration } from './configuration/configuration';
import { API } from './tsServer/api';
import type * as Proto from './tsServer/protocol/protocol';
import { ITypeScriptServiceClient } from './typescriptService';
export declare const enum ProjectType {
    TypeScript = 0,
    JavaScript = 1
}
export declare function isImplicitProjectConfigFile(configFileName: string): boolean;
export declare function inferredProjectCompilerOptions(version: API, projectType: ProjectType, serviceConfig: TypeScriptServiceConfiguration): Proto.ExternalProjectCompilerOptions;
export declare function openOrCreateConfig(version: API, projectType: ProjectType, rootPath: vscode.Uri, configuration: TypeScriptServiceConfiguration): Promise<vscode.TextEditor | null>;
export declare function openProjectConfigOrPromptToCreate(projectType: ProjectType, client: ITypeScriptServiceClient, rootPath: vscode.Uri, configFilePath: string): Promise<void>;
export declare function openProjectConfigForFile(projectType: ProjectType, client: ITypeScriptServiceClient, resource: vscode.Uri): Promise<void>;
//# sourceMappingURL=tsconfig.d.ts.map