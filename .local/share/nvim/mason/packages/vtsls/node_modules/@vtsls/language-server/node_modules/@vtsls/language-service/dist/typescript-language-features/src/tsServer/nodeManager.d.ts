import * as vscode from 'vscode';
import { TypeScriptServiceConfiguration } from '../configuration/configuration';
import { Disposable } from '../utils/dispose';
export declare class NodeVersionManager extends Disposable {
    private configuration;
    private readonly workspaceState;
    private _currentVersion;
    constructor(configuration: TypeScriptServiceConfiguration, workspaceState: vscode.Memento);
    private readonly _onDidPickNewVersion;
    readonly onDidPickNewVersion: vscode.Event<void>;
    get currentVersion(): string | undefined;
    updateConfiguration(nextConfiguration: TypeScriptServiceConfiguration): Promise<void>;
    private computeNewVersion;
    private promptUseWorkspaceNode;
    private promptAndSetWorkspaceNode;
    private updateActiveVersion;
    private canUseWorkspaceNode;
    private setUseWorkspaceNodeState;
}
//# sourceMappingURL=nodeManager.d.ts.map