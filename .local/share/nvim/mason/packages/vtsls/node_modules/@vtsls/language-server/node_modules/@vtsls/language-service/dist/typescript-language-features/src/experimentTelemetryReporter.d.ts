import VsCodeTelemetryReporter from '@vscode/extension-telemetry';
import * as vscode from 'vscode';
import * as tas from 'vscode-tas-client';
export interface IExperimentationTelemetryReporter extends tas.IExperimentationTelemetry, vscode.Disposable {
    postEventObj(eventName: string, props: {
        [prop: string]: string;
    }): void;
}
/**
 * This reporter *supports* experimentation telemetry,
 * but will only do so when passed to an {@link ExperimentationService}.
 */
export declare class ExperimentationTelemetryReporter implements IExperimentationTelemetryReporter {
    private _sharedProperties;
    private readonly _reporter;
    constructor(reporter: VsCodeTelemetryReporter);
    setSharedProperty(name: string, value: string): void;
    postEvent(eventName: string, props: Map<string, string>): void;
    postEventObj(eventName: string, props: {
        [prop: string]: string;
    }): void;
    dispose(): void;
}
//# sourceMappingURL=experimentTelemetryReporter.d.ts.map