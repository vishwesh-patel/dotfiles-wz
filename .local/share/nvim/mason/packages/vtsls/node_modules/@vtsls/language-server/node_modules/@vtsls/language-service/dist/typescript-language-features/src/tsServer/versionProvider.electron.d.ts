import { TypeScriptServiceConfiguration } from '../configuration/configuration';
import { ITypeScriptVersionProvider, TypeScriptVersion } from './versionProvider';
export declare class DiskTypeScriptVersionProvider implements ITypeScriptVersionProvider {
    private configuration?;
    constructor(configuration?: TypeScriptServiceConfiguration | undefined);
    updateConfiguration(configuration: TypeScriptServiceConfiguration): void;
    get defaultVersion(): TypeScriptVersion;
    get globalVersion(): TypeScriptVersion | undefined;
    get localVersion(): TypeScriptVersion | undefined;
    get localVersions(): TypeScriptVersion[];
    get bundledVersion(): TypeScriptVersion;
    private get contributedTsNextVersion();
    private getContributedVersion;
    private get localTsdkVersions();
    private loadVersionsFromSetting;
    private get localNodeModulesVersions();
    private loadTypeScriptVersionsFromPath;
    private static getApiVersion;
    private static getTypeScriptVersion;
}
//# sourceMappingURL=versionProvider.electron.d.ts.map