import * as vscode from 'vscode';
import type * as Proto from '../../tsServer/protocol/protocol';
export interface IFilePathToResourceConverter {
    /**
     * Convert a typescript filepath to a VS Code resource.
     */
    toResource(filepath: string): vscode.Uri;
}
export declare function asPlainTextWithLinks(parts: readonly Proto.SymbolDisplayPart[] | string, filePathConverter: IFilePathToResourceConverter): string;
export declare function tagsToMarkdown(tags: readonly Proto.JSDocTagInfo[], filePathConverter: IFilePathToResourceConverter): string;
export declare function documentationToMarkdown(documentation: readonly Proto.SymbolDisplayPart[] | string, tags: readonly Proto.JSDocTagInfo[], filePathConverter: IFilePathToResourceConverter, baseUri: vscode.Uri | undefined): vscode.MarkdownString;
export declare function appendDocumentationAsMarkdown(out: vscode.MarkdownString, documentation: readonly Proto.SymbolDisplayPart[] | string | undefined, tags: readonly Proto.JSDocTagInfo[] | undefined, converter: IFilePathToResourceConverter): vscode.MarkdownString;
//# sourceMappingURL=textRendering.d.ts.map