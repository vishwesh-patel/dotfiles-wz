import * as lsp from "vscode-languageserver-protocol";
import { TSLspConverter } from "../utils/converter";
import { TSLanguageServiceEvents, WorkDoneProgressReporter } from "./types";
export interface TSLanguageServiceDelegate {
    converter: TSLspConverter;
    openExternal: (uri: lsp.URI) => Promise<boolean>;
    logMessage: (type: lsp.MessageType, message: string) => void;
    logTrace: (message: string) => void;
    showMessage: (type: lsp.MessageType, message: string, ...actions: lsp.MessageActionItem[]) => Promise<lsp.MessageActionItem | null>;
    openTextDocument(uri: lsp.URI, focus?: boolean): Promise<boolean>;
    applyWorkspaceEdit(edit: lsp.WorkspaceEdit): Promise<boolean>;
    createWorkDoneProgress: () => Promise<WorkDoneProgressReporter | undefined>;
    publishDiagnostics: (uri: lsp.URI, diagnostics: lsp.Diagnostic[]) => void;
}
export declare function createTSLanguageServiceDelegate(converter: TSLspConverter): {
    events: TSLanguageServiceEvents;
    delegate: TSLanguageServiceDelegate;
};
//# sourceMappingURL=delegate.d.ts.map