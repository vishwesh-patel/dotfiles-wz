import type * as Proto from '../tsServer/protocol/protocol';
import { Disposable } from '../utils/dispose';
import { Logger } from './logger';
interface RequestExecutionMetadata {
    readonly queuingStartTime: number;
}
export default class Tracer extends Disposable {
    private readonly logger;
    constructor(logger: Logger);
    traceRequest(serverId: string, request: Proto.Request, responseExpected: boolean, queueLength: number): void;
    traceResponse(serverId: string, response: Proto.Response, meta: RequestExecutionMetadata): void;
    traceRequestCompleted(serverId: string, command: string, request_seq: number, meta: RequestExecutionMetadata): any;
    traceEvent(serverId: string, event: Proto.Event): void;
    trace(serverId: string, message: string, data?: unknown): void;
}
export {};
//# sourceMappingURL=tracer.d.ts.map