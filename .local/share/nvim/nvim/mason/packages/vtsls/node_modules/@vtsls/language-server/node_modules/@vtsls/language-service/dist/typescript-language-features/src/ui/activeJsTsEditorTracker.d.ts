import * as vscode from 'vscode';
import { Disposable } from '../utils/dispose';
/**
 * Tracks the active JS/TS editor.
 *
 * This tries to handle the case where the user focuses in the output view / debug console.
 * When this happens, we want to treat the last real focused editor as the active editor,
 * instead of using `vscode.window.activeTextEditor`
 */
export declare class ActiveJsTsEditorTracker extends Disposable {
    private _activeJsTsEditor;
    private readonly _onDidChangeActiveJsTsEditor;
    readonly onDidChangeActiveJsTsEditor: vscode.Event<vscode.TextEditor | undefined>;
    constructor();
    get activeJsTsEditor(): vscode.TextEditor | undefined;
    private update;
    private getEditorCandidatesForActiveTab;
    private isManagedFile;
    private isManagedScriptFile;
    private isManagedConfigFile;
}
//# sourceMappingURL=activeJsTsEditorTracker.d.ts.map